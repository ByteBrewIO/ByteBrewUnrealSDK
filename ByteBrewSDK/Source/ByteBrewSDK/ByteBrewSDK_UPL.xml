<?xml version="1.0" encoding="utf-8"?>
<!--GearVR plugin additions-->
<root xmlns:android="http://schemas.android.com/apk/res/android">
	<trace enable="true"/>
	<init>
		<log text="ByteBrewSDK init"/>
	</init>

	<gradleCopies>
		<!-- Copy the generated resource file to be packaged -->
		<copyFile 
			src="$S(PluginDir)/../ThirdParty/Android/bytebrewlibrary-native.aar" 
			dst="$S(BuildDir)/gradle/app/libs/bytebrewlibrary-native.aar" 
		/>
		<!-- Copy the ByteBrewWrapper.java file to the appropriate location -->
		<copyFile 
        	src="$S(PluginDir)/Private/Java/ByteBrewWrapper.java"
        	dst="$S(BuildDir)/gradle/app/src/main/java/com/bytebrew/unrealsdk/ByteBrewWrapper.java"
    	/>
	</gradleCopies>

	<buildGradleAdditions>
		<insert>
			<![CDATA[
        repositories {    
            jcenter()
            flatDir {
                dirs 'libs'
            }
        }

        dependencies {
            implementation (name: 'bytebrewlibrary-native', ext: 'aar')
            implementation 'com.android.installreferrer:installreferrer:2.2'
        }

        android {
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            packagingOptions {
                exclude 'META-INF/NOTICE'
                exclude 'META-INF/LICENSE'
            }
        
        }
        ]]>
		</insert>
	</buildGradleAdditions>

	<!-- optional additions to the GameActivity imports in GameActivity.java -->
	<gameActivityImportAdditions>
		<insert>
			import com.bytebrew.bytebrewlibrary.ByteBrew;
		</insert>
	</gameActivityImportAdditions>

	<!-- optional additions to proguard -->
	<proguardAdditions>
		<insert>
			<!-- :TEST: added     -keepnames class com.rz.gltsdk.testlibmain -->
			<![CDATA[
      -keepattributes Signature
      -dontskipnonpubliclibraryclassmembers
      
      -keep public class com.bytebrew.bytebrewlibrary.** { *; }      
	  -keep public class com.bytebrew.unrealsdk.** { *; }

      -keepclassmembers class com.epicgames.ue4.GameActivity {
            public <methods>;
            public <fields>;
     }
    ]]>
		</insert>
	</proguardAdditions>

	<androidManifestUpdates>
		<insert>
		</insert>
	</androidManifestUpdates>

	<!-- optional additions to the GameActivity class in GameActivity.java -->
	<gameActivityClassAdditions>
		<insert>

		</insert>
	</gameActivityClassAdditions>

	<!-- optional additions to GameActivity onCreate metadata reading in GameActivity.java -->
	<gameActivityReadMetadataAdditions>
		<insert>

		</insert>
	</gameActivityReadMetadataAdditions>

	<!-- optional additions to GameActivity onCreate in GameActivity.java -->
	<gameActivityOnCreateAdditions>
		<insert>
		</insert>
	</gameActivityOnCreateAdditions>

	<!-- optional additions to GameActivity onDestroy in GameActivity.java -->
	<gameActivityOnDestroyAdditions>
		<insert>

		</insert>
	</gameActivityOnDestroyAdditions>


	<!-- optional additions to GameActivity onStart in GameActivity.java -->
	<gameActivityOnStartAdditions>
		<insert>

		</insert>
	</gameActivityOnStartAdditions>

	<!-- optional additions to GameActivity onStop in GameActivity.java -->
	<gameActivityOnStopAdditions>
		<insert>

		</insert>
	</gameActivityOnStopAdditions>


	<!-- optional additions to GameActivity onPause in GameActivity.java	-->
	<gameActivityOnPauseAdditions>
		<insert>
		</insert>
	</gameActivityOnPauseAdditions>


	<!-- optional additions to GameActivity onResume in GameActivity.java	-->
	<gameActivityOnResumeAdditions>
		<insert>
		</insert>
	</gameActivityOnResumeAdditions>


	<!-- optional additions to GameActivity onActivityResult in GameActivity.java -->
	<gameActivityOnActivityResultAdditions>
		<insert>
		</insert>
	</gameActivityOnActivityResultAdditions>


	<!-- optional libraries to load in GameActivity.java before libUE4.so -->
	<soLoadLibrary>
		<!-- need this if plugin enabled and supported architecture, even if not packaged for GearVR -->
	</soLoadLibrary>
</root>